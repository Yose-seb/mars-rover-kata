name: Java CI

on:
  push:
    paths:
      - 'java/**'
      - '.github/workflows/java**'
  pull_request:
    paths:
      - 'java/**'
      - '.github/workflows/java**'

  schedule:
    # weekly build every FRI
    - cron: "0 6 * * 5"

jobs:

  matrix_build:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-latest, macOS-latest,  windows-latest ]
        java: [ 17 ]
    name: Java ${{ matrix.java }} Build on ${{ matrix.operating-system }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v2.5.0
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Cache gradle wrapper
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('java/**/*.gradle*', 'java/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('java/**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

     
      #### BEGIN junit5
      - name: build junit5 with maven
        working-directory: java/junit5
        run: mvn -B clean package --file pom.xml

      # gradlew:
      - name: build with gradlew
        working-directory: java/junit5
        run: ./gradlew test --warning-mode all
      # gradle:
      - uses: eskatos/gradle-command-action@v2.1.3
        with:
          build-root-directory: java/junit5
          gradle-version: current
          arguments: test --warning-mode all

      - name: assure one failing test
        working-directory: java/junit5
        run: "sh './gradlew test'"
      #### END junit5


  docker_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      #### BEGIN junit5
      - name: docker junit5
        working-directory: java/junit5
        run: "sh './docker_test.sh'"
      #### END junit5
